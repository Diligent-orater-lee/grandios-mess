import{b as d}from"./chunk-FQDDMH5W.js";import{$ as c,A as h,Q as l,T as i,X as U,a as P,b as g,cc as p,ec as I,g as s,mc as n,nc as D,pc as v,qc as b,rc as A,t as m}from"./chunk-UCDLZYA7.js";var f=class e{http=c(I);apiUrl=A.apiUrl;createPattern(a){return this.http.post(`${this.apiUrl}/patterns`,a)}getPatterns(a){let t=new p;return a&&(t=t.set("userId",a)),this.http.get(`${this.apiUrl}/patterns`,{params:t})}getPattern(a,t){let r=new p;return t&&(r=r.set("userId",t)),this.http.get(`${this.apiUrl}/patterns/${a}`,{params:r})}updatePattern(a,t,r){let o=new p;return r&&(o=o.set("userId",r)),this.http.patch(`${this.apiUrl}/patterns/${a}`,t,{params:o})}deletePattern(a,t){let r=new p;return t&&(r=r.set("userId",t)),this.http.delete(`${this.apiUrl}/patterns/${a}`,{params:r})}static \u0275fac=function(t){return new(t||e)};static \u0275prov=U({token:e,factory:e.\u0275fac,providedIn:"root"})};var w={patterns:[],loading:!1,error:null,selectedUserId:void 0,currentPattern:null},E=D({providedIn:"root"},b(w),v(e=>{let a=c(f);return{setSelectedUserId(t){n(e,{selectedUserId:t})},loadPatterns:d(s(i(()=>n(e,{loading:!0,error:null})),l(()=>{let t=e.selectedUserId();return a.getPatterns(t)}),i({next:t=>{n(e,{patterns:t.data,loading:!1,error:null})},error:t=>{n(e,{loading:!1,error:t.error?.message||"Failed to load patterns"})}}))),createPattern:d(s(i(()=>n(e,{loading:!0,error:null})),l(t=>{let r=e.selectedUserId(),o=r?g(P({},t),{userId:r}):t;return a.createPattern(o)}),i({next:t=>{let r=e.patterns();n(e,{patterns:[...r,t.data],loading:!1,error:null})},error:t=>{n(e,{loading:!1,error:t.error?.message||"Failed to create pattern"})}}))),updatePattern:d(s(i(()=>n(e,{loading:!0,error:null})),l(({id:t,updates:r})=>{let o=e.selectedUserId();return a.updatePattern(t,r,o)}),i({next:t=>{let o=e.patterns().map(u=>u.id===t.data.id?t.data:u);n(e,{patterns:o,loading:!1,error:null})},error:t=>{n(e,{loading:!1,error:t.error?.message||"Failed to update pattern"})}}))),deletePattern:d(s(i(()=>n(e,{loading:!0,error:null})),l(t=>{let r=e.selectedUserId();return a.deletePattern(t,r).pipe(i({next:()=>{let u=e.patterns().filter(R=>R.id!==t);n(e,{patterns:u,loading:!1,error:null})},error:o=>{n(e,{loading:!1,error:o.error?.message||"Failed to delete pattern"})}}))}))),clearError(){n(e,{error:null})},getPattern:d(s(i(()=>n(e,{loading:!0,error:null})),l(t=>{let r=e.selectedUserId();return a.getPattern(t,r)}),i({next:t=>{n(e,{currentPattern:t.data,loading:!1,error:null})},error:t=>{n(e,{loading:!1,error:t.error?.message||"Failed to load pattern"})}}))),loadPatternFromRoute:d(s(m(t=>t.get("id")),h(t=>t&&t!=="new"),i(t=>n(e,{loading:!0,error:null})),l(t=>{let r=e.selectedUserId();return a.getPattern(t,r)}),i({next:t=>{n(e,{currentPattern:t.data,loading:!1,error:null})},error:t=>{n(e,{loading:!1,error:t.error?.message||"Failed to load pattern"})}})))}}));export{E as a};
